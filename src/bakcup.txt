const TelegramBot = require('node-telegram-bot-api');
const cfg = require('./cfg.js');
const mysql = require('mysql');
const Sequelize = require('sequelize');
const helper = require('./helper.js');
const kb = require('./keyboardButtons.js');
const keyboard = require('./keyboard.js');
//const db = require('./db/dataModel.js');
//const Model = db.podocontrol;
const chatId = helper.getChatId;

const connection = mysql.createConnection({
    host: '127.0.0.1',
    user: 'root',
    password: '',
    database: 'podocontrol'
  });

connection.connect((err) => {
    if (err) {
      console.error('Ошибка подключения к базе данных: ' + err.stack);
      return;
    }
    console.log('Подключение к базе данных успешно.');
});

helper.logStart();

const bot = new TelegramBot(cfg.TOKEN, {
    polling: true
})

bot.on('message', msg => {
    console.log('Working...', msg.from.first_name);

    switch(msg.text){
        case kb.home.Procedurs:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка процедуру: `,{
                reply_markup: {keyboard: keyboard.procedurs}
            })
            break
        case kb.back:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка команду`, {
                reply_markup: {keyboard: keyboard.home}
            })
            break
        case kb.procedursBack:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка процедуру`), {
                reply_markup: {keyboard: keyboard.procedurs}
            }
        case kb.Cb:
            bot.sendMessage(chatId(msg), `Добрий день, якщо вас з'явились питання ви можете написать @podo_control або зателефонувати за номером +38(050)-733-50-98\nP.s. Якщо помітили якісь поломки або баг у боті, повідомте будь ласка @s0ulcats`,{
                reply_markup: {keyboard: keyboard.back}
            })
            bot.sendSticker(chatId(msg), 'https://tlgrm.ru/_/stickers/348/e30/348e3088-126b-4939-b317-e9036499c515/2.webp');
            break
        case kb.record:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка дату та час якій більш всього вас влаштує`, {
                reply_markup: {keyboard: keyboard.FreeDate}
            })
            break
        case kb.procedurs.pedecur:
            bot.sendMessage(chatId(msg), `Ви вибрали процедуру 'Педикюр', виберіть будь ласка дату та час якій більш всього вас влаштує`, {
                reply_markup: {keyboard: keyboard.allProcedurs}
            })
            break
        case kb.procedurs.manicur:
            bot.sendMessage(chatId(msg), `Ви вибрали процедуру 'Манікюр', виберіть будь ласка дату та час якій більш всього вас влаштує`, {
                reply_markup: {keyboard: keyboard.allProcedurs}
            })
            break
        case kb.procedurs.podoView:
            bot.sendMessage(chatId(msg), `Ви вибрали процедуру 'Профісіональний подологічний огляд', виберіть будь ласка дату та час якій більш всього вас влаштує`, {
                reply_markup: {keyboard: keyboard.allProcedurs}
            })
            break
        case kb.FreeDates:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка дату та час якій більш всього вас влаштує`, {
                reply_markup: {keyboard: keyboard.FreeDate}
            })
            break
        case kb.freeDate.Jun2:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час якій більш всього вас влаштує`, {
                reply_markup: {keyboard: keyboard.Jun2}
            })
            break
        case kb.freeDate.Jun3:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час якій більш всього вас влаштує`, {
                reply_markup: {keyboard: keyboard.Jun3}
            })
            break
        case kb.freeDate.Jun4:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun4}
            });
            break;
        case kb.freeDate.Jun5:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun5}
            });
            break;
        case kb.freeDate.Jun6:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun6}
            });
            break;
        case kb.freeDate.Jun7:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun7}
            });
            break;
        case kb.freeDate.Jun8:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun8}
            });
            break;
        case kb.freeDate.Jun9:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun9}
            });
            break;
        case kb.freeDate.Jun10:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun10}
            });
            break;
        case kb.freeDate.Jun11:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun11}
            });
            break;
        case kb.freeDate.Jun12:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun12}
            });
            break;
        case kb.freeDate.Jun13:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun13}
            });
            break;
        case kb.freeDate.Jun14:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun14}
            });
            break;
        case kb.freeDate.Jun15:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun15}
            });
            break;
             case kb.freeDate.Jun16:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun16}
            });
            break;
        case kb.freeDate.Jun17:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun17}
            });
            break;
        case kb.freeDate.Jun18:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun18}
            });
            break;
        case kb.freeDate.Jun19:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun19}
            });
            break;
        case kb.freeDate.Jun20:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun20}
            });
            break;
        case kb.freeDate.Jun21:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun21}
            });
            break;
        case kb.freeDate.Jun22:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun22}
            });
            break;
        case kb.freeDate.Jun23:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun23}
            });
            break;
        case kb.freeDate.Jun20:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun20}
            });
            break;
        case kb.freeDate.Jun21:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun21}
            });
            break;
        case kb.freeDate.Jun22:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun22}
            });
            break;
        case kb.freeDate.Jun23:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun23}
            });
            break;
         case kb.freeDate.Jun24:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun24}
            });
            break;
        case kb.freeDate.Jun25:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun25}
            });
            break;
        case kb.freeDate.Jun26:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun26}
            });
            break;
        case kb.freeDate.Jun27:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun27}
            });
            break;
        case kb.freeDate.Jun28:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun28}
            });
            break;
        case kb.freeDate.Jun29:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun29}
            });
            break;
        case kb.freeDate.Jun30:
            bot.sendMessage(chatId(msg), `Виберіть будь ласка час, який більш всього вас влаштовує`, {
                reply_markup: {keyboard: keyboard.Jun30}
            });
            break;
        case kb.spisokProcedur:
            bot.sendMessage(chatId(msg), `Список процедур:\nПедикюр\nМанікюр\nПрофесіональний подологічний огляд`, {
                reply_markup: {keyboard: keyboard.afterSpisokProcedur}
            })
            break
            case kb.Jun2.Jun8:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break;
            case kb.Jun2.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun2.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun2.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun2.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun2.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun2.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun2.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun2.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun2.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun2o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun2.Jun18:
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun2o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun3.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun3.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun3o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun4.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun4.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun4.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun4.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun4.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun4.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun4.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun4.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun4.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun4.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun4.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun4o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
            break
            case kb.Jun5.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun5.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun5.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun5.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun5.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun5.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun5.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun5.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun5.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun5.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun5.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun5o818 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun6.Jun8:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break;
            case kb.Jun6.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun6.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun6.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun6.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun6.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun6.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun6.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun6.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun6.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun6o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun6.Jun18:
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun6o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun7.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun7.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun7o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun8.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun8.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun8.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun8.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun8.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun8.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun8.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun8.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun8.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun8.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun8.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun8o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
            break
            case kb.Jun9.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun9.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun9.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun9.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun9.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun9.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun9.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun9.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun9.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun9.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun9.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun9o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun10.Jun8:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break;
            case kb.Jun10.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun10.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun10.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun10.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun10.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun10.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun10.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun10.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun10.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun10o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun10.Jun18:
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun10o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun11.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun11.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun11o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun12.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun12.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun12.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun12.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun12.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun12.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun12.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun12.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun12.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun12.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun12.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun12o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
            break
            case kb.Jun13.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun13.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun13.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun13.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun13.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun13.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun13.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun13.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun13.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun13.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun13.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun13o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun14.Jun8:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break;
            case kb.Jun14.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun14.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun14.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun14.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun14.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun14.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun14.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun14.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun14.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun14o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun14.Jun18:
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun14o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun15.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun15.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun15o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun16.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun16.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun16.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun16.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun16.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun16.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun16.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun16.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun16.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun16.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun16.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun16o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
            break
            case kb.Jun17.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun17.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun17.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun17.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun17.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun17.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun17.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun17.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun17.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun17.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun17.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun17o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun18.Jun8:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break;
            case kb.Jun18.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun18.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun18.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun18.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun18.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun18.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun18.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun18.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun18.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun18o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun18.Jun18:
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun18o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun19.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun19.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun19o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun20.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun20.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun20.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun20.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun20.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun20.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun20.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun20.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun20.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun20.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun20.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun20o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
            break
            case kb.Jun21.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun21.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun21.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun21.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun21.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun21.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun21.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun21.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun21.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun21.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun21.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun21o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun22.Jun8:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break;
            case kb.Jun22.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun22.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun22.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun22.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun22.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun22.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun22.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun22.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun22.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun22o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun22.Jun18:
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun22o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun23.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun23.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun23o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun24.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun24.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun24.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun24.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun24.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun24.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun24.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun24.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun24.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun24.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun24.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun24o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
            break
            case kb.Jun25.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun25.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun25.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun25.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun25.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun25.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun25.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun25.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun25.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun25.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun25.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun25o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun26.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun26.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun26.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun26.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun26.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun26.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun26.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun26.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun26.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun26.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun26.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun26o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun27.Jun8:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break;
            case kb.Jun27.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun27.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun27.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun27.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun27.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun27.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun27.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun27.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun27.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                    reply_markup: {keyboard: keyboard.spisokProcedur}
                });
                        
                        // Ожидаем ответа от пользователя
                bot.on('message', (msg) => {
                    if (msg.text) {
                                // Извлекаем данные из сообщения
                        const userData = {
                            name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                            phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                            procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                        };
                    
        
                        if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                            const sql = `INSERT INTO Jun27o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                            connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                                if (err) {
                                    bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                                } else {
                                    bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                    bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                                }
                                });
                        } else {
                            console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                        }
                    }
                    });
                break
            case kb.Jun27.Jun18:
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun27o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun28.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun28.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun28o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
                case kb.Jun29.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun29.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun29.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun29.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun29.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun29.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun29.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun29.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun29.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun29.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun29.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun29o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
            break
            case kb.Jun30.Jun8:
                    // Отправляем сообщение пользователю с запросом на заполнение формы
            bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o8 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break;
            case kb.Jun30.Jun9:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o9 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun30.Jun10:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o10 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun30.Jun11:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o11 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun30.Jun12:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o12 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun30.Jun13:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o13 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun30.Jun14:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o14 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun30.Jun15:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o15 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun30.Jun16:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o16 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun30.Jun17:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o17 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
            case kb.Jun30.Jun18:
                bot.sendMessage(chatId(msg), `Заповніть будь ласка форму\nІм'я\nНомер телефону\nПроцедура`, {
                reply_markup: {keyboard: keyboard.spisokProcedur}
            });
                    
                    // Ожидаем ответа от пользователя
            bot.on('message', (msg) => {
                if (msg.text) {
                            // Извлекаем данные из сообщения
                    const userData = {
                        name: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[0],
                        phoneNumber: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[1],
                        procedura: msg.text.split(/(?:,|\s{2,}|\s|\n)+/)[2]
                    };
                
    
                    if (userData.phoneNumber !== undefined && userData.phoneNumber.trim() !== '') {
                        const sql = `INSERT INTO Jun30o18 (name, phoneNumber, procedura) VALUES (?, ?, ?)`;
                        connection.query(sql, [userData.name, userData.phoneNumber, userData.procedura], (err, result) => {
                            if (err) {
                                bot.sendMessage(chatId(msg), 'Приносимо пробачення, при занесенні данних була видана помилка, відпишіть будь ласка @s0ulcats' + err.message);
                            } else {
                                bot.sendMessage(chatId(msg), 'Дякуєм за запис❤\nЯкщо будуть питання пишіть @podo_control');
                                bot.sendSticker(chatId(msg), 'https://cdn.tlgrm.ru/stickers/370/545/37054570-0c95-46d1-940a-589cf00b2410/192/1.webp')
                            }
                            });
                    } else {
                        console.error('Номер телефона отсутствует или имеет недопустимое значение.');
                    }
                }
                });
                break
    }
})

bot.onText('/start', msg => {
    const text = `Добро пожаловать ${msg.from.first_name}❤`
    bot.sendSticker(chatId(msg), 'https://tlgrm.ru/_/stickers/2e3/9fc/2e39fcfc-7fb0-3b20-b6fe-4009349d05ef/1.webp');
    bot.sendMessage(chatId(msg), text, {
        reply_markup: {
            keyboard: keyboard.home
        }
    })
})